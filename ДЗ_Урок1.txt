Как организовать клиент-серверное взаимодействие?
 - Байтовый поток (Channel) + собственный протокол обмена (сообщения-команды и сообщения-файлы)
Как и в каком виде передавать файлы?
 - Упаковать в структуру типа TLV
Как пересылать большие файлы?
 - использовать буферы фиксированного размера перекачивая в них файл по частям
Как пересылать служебные команды?
 - Если реализовывать передачу комманд параллельно передаче файлов, то видимо отдельное сетевое соединение
Что хранить в базе данных?
 - Данные для аутентификации, возможно статистику, права доступа, квоту и т.д.
Как передавать структуру каталогов/файлов?
 - Списком имен в служебном сообщении с указанием атрибутов (имя, признак каталога, длина)
Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?
 - Видимо Netty, если с ней проще работать чем с NIO


В качестве способа передачи данных я планирую использовать байтовые потоки и написание своего протокола обмена.
Ориентировочно он будет состоять из сообщений-команд и сообщений-файлов.

Думаю что для параллельного обмена командами и файлами потребуются два сетевых соединения. Одно управляющее (аутентификация/команды), второе - передача файла.
Сервер будет сообщать клиенту порт для дополнительного коннекта. 

Для уменьшения количества потоков планирую использовать механизм селекторов в NIO или аналог в NETTY. Будет окончательно ясно после знакомства с этими технологиями.

СУБД потребуется для хранения учетных данных пользователей (логин/пароль). Можно добавить туда статистику: подключения, введенные команды, можно опрелелить квоту на диск ресурсы и т.д.

На данный момент я набросал GUI и аутентификацию. Следующим шагом буду определяться с протоколом.

